os.getcwd D:\_devs\Python01\gitdev\dsa2
D:\_devs\Python01\gitdev\dsa2
D:/_devs/Python01/gitdev/dsa2/
D:/_devs/Python01/gitdev/dsa2/data/
{'coly': 'Survived', 'colid': 'PassengerId', 'colcat': ['Sex', 'Embarked'], 'colnum': ['Pclass', 'Age', 'SibSp', 'Parch', 'Fare'], 'coltext': [], 'coldate': [], 'colcross': ['Name', 'Sex', 'Ticket', 'Embarked', 'Pclass', 'Age', 'SibSp', 'Parch', 'Fare']}
{'path_config_model': 'D:/_devs/Python01/gitdev/dsa2//titanic_classifier.py', 'config_name': 'titanic_lightgbm', 'path_data_train': 'data/input/titanic/train/', 'path_data_test': 'data/input/titanic/test/', 'path_model': 'data/output/titanic/LGBMClassifier/', 'path_output_pred': 'data/output/titanic/pred_titanic_lightgbm/', 'n_sample': 1000}
os.getcwd D:\_devs\Python01\gitdev\dsa2
D:/_devs/Python01/gitdev/dsa2/
D:/_devs/Python01/gitdev/dsa2/

  D:/_devs/Python01/gitdev/dsa2/data/input/titanic/test//features.zip D:/_devs/Python01/gitdev/dsa2/data/output/titanic/LGBMClassifier/ D:/_devs/Python01/gitdev/dsa2/data/output/titanic/pred_titanic_lightgbm/ 

  ('loading', 'PassengerId', 'D:/_devs/Python01/gitdev/dsa2/data/input/titanic/test//features.zip') 
['D:/_devs/Python01/gitdev/dsa2/data/input/titanic/test\\features.zip']

  ('dfX_raw',                             0  ...                       417
PassengerId               892  ...                      1309
Pclass                      3  ...                         3
Name         Kelly, Mr. James  ...  Peter, Master. Michael J
Sex                      male  ...                      male

[4 rows x 418 columns]) 

  ('dfy not loaded', None, TypeError('expected str, bytes or os.PathLike object, not NoneType',)) 
D:/_devs/Python01/gitdev/dsa2/

  ('########### Load column by column type ##################################',) 

  ({'coly': 'Survived', 'colid': 'PassengerId', 'colcat': ['Sex', 'Embarked'], 'colnum': ['Pclass', 'Age', 'SibSp', 'Parch', 'Fare'], 'coltext': [], 'coldate': [], 'colcross': ['Name', 'Sex', 'Ticket', 'Embarked', 'Pclass', 'Age', 'SibSp', 'Parch', 'Fare']},) 

  ('###################', {'uri': 'source/preprocessors.py::pd_colnum_bin', 'pars': {}, 'cols_family': 'colnum', 'type': ''}, '#######################################################') 

  ('D:\\_devs\\Python01\\gitdev\\dsa2',) 
D:/_devs/Python01/gitdev/dsa2/
             Pclass  ... Embarked
PassengerId          ...         
892               3  ...        Q
893               3  ...        S
894               2  ...        Q
895               3  ...        S
896               3  ...        S
...             ...  ...      ...
1305              3  ...        S
1306              1  ...        C
1307              3  ...        S
1308              3  ...        S
1309              3  ...        C

[418 rows x 9 columns] ['Pclass', 'Age', 'SibSp', 'Parch', 'Fare']

  (OrderedDict([('Pclass', [0.9999, 1.2, 1.4, 1.6, 1.8, 2.0, 2.2, 2.4000000000000004, 2.6, 2.8, 3.0]), ('Age', [0.41989998688697816, 8.378000169992447, 16.336000353097916, 24.294000536203384, 32.25200071930885, 40.21000090241432, 48.16800108551979, 56.12600126862526, 64.08400145173073, 72.0420016348362, 80.00000181794167]), ('SibSp', [-0.0001, 0.8, 1.6, 2.4000000000000004, 3.2, 4.0, 4.800000000000001, 5.6000000000000005, 6.4, 7.2, 8.0]), ('Parch', [-0.0001, 0.6, 1.2, 1.7999999999999998, 2.4, 3.0, 3.5999999999999996, 4.2, 4.8, 5.3999999999999995, 6.0]), ('Fare', [-0.0001, 51.23292236328125, 102.4658447265625, 153.69876708984373, 204.931689453125, 256.16461181640625, 307.39753417968745, 358.6304565429687, 409.86337890625, 461.09630126953124, 512.3292236328125])]),) 

  ('### colnum Map numerics to Category bin  ###########################################',) 
Pclass
           Pclass               
             size mean  max  min
Pclass_bin                      
0             107  1.0  1.0  1.0
4              93  2.0  2.0  2.0
9             218  3.0  3.0  3.0
Age
         Age                         
        size       mean    max    min
Age_bin                              
-1        88   0.250000   0.33   0.17
 0        16   3.656250   8.00   0.75
 1        16  12.625000  16.00   9.00
 2        97  21.000000  24.00  17.00
 3        81  28.148148  32.00  25.00
 4        43  36.383720  40.00  32.50
 5        38  44.460526  48.00  40.50
 6        20  52.250000  55.00  49.00
 7        17  60.617645  64.00  57.00
 8         1  67.000000  67.00  67.00
 9         1  76.000000  76.00  76.00
SibSp
          SibSp               
           size mean  max  min
SibSp_bin                     
0           283  0.0  0.0  0.0
1           110  1.0  1.0  1.0
2            14  2.0  2.0  2.0
3             4  3.0  3.0  3.0
4             4  4.0  4.0  4.0
6             1  5.0  5.0  5.0
9             2  8.0  8.0  8.0
Parch
          Parch               
           size mean  max  min
Parch_bin                     
-1            2  9.0  9.0  9.0
 0          324  0.0  0.0  0.0
 1           52  1.0  1.0  1.0
 3           33  2.0  2.0  2.0
 4            3  3.0  3.0  3.0
 6            2  4.0  4.0  4.0
 8            1  5.0  5.0  5.0
 9            1  6.0  6.0  6.0
Fare
         Fare                                    
         size        mean         max         min
Fare_bin                                         
-1          1         NaN         NaN         NaN
 0        338   15.439312   50.495800    0.000000
 1         48   68.390717   93.500000   51.479198
 2         11  134.330688  151.550003  106.425003
 3          2  164.866699  164.866699  164.866699
 4         10  219.772095  247.520798  211.337494
 5          7  262.553558  263.000000  262.375000
 9          1  512.329224  512.329224  512.329224

  (OrderedDict([('Pclass', [0.9999, 1.2, 1.4, 1.6, 1.8, 2.0, 2.2, 2.4000000000000004, 2.6, 2.8, 3.0]), ('Age', [0.41989998688697816, 8.378000169992447, 16.336000353097916, 24.294000536203384, 32.25200071930885, 40.21000090241432, 48.16800108551979, 56.12600126862526, 64.08400145173073, 72.0420016348362, 80.00000181794167]), ('SibSp', [-0.0001, 0.8, 1.6, 2.4000000000000004, 3.2, 4.0, 4.800000000000001, 5.6000000000000005, 6.4, 7.2, 8.0]), ('Parch', [-0.0001, 0.6, 1.2, 1.7999999999999998, 2.4, 3.0, 3.5999999999999996, 4.2, 4.8, 5.3999999999999995, 6.0]), ('Fare', [-0.0001, 51.23292236328125, 102.4658447265625, 153.69876708984373, 204.931689453125, 256.16461181640625, 307.39753417968745, 358.6304565429687, 409.86337890625, 461.09630126953124, 512.3292236328125])]),) 

  (['Pclass_bin', 'Age_bin', 'SibSp_bin', 'Parch_bin', 'Fare_bin'],) 

  ('###################', {'uri': 'source/preprocessors.py::pd_colnum_binto_onehot', 'pars': {}, 'cols_family': 'colnum_bin', 'type': ''}, '#######################################################') 

  ('D:\\_devs\\Python01\\gitdev\\dsa2',) 
             Pclass  ... Embarked
PassengerId          ...         
892               3  ...        Q
893               3  ...        S
894               2  ...        Q
895               3  ...        S
896               3  ...        S
...             ...  ...      ...
1305              3  ...        S
1306              1  ...        C
1307              3  ...        S
1308              3  ...        S
1309              3  ...        C

[418 rows x 9 columns] ['Pclass_bin', 'Age_bin', 'SibSp_bin', 'Parch_bin', 'Fare_bin']

  ('###### colnum bin to One Hot  #################################################',) 
Pclass_bin 3 (418, 5)
Age_bin 11 (418, 7)
SibSp_bin 7 (418, 17)
Parch_bin 8 (418, 23)
Fare_bin 8 (418, 30)

  (['Pclass_bin_0', 'Pclass_bin_4', 'Pclass_bin_9', 'Age_bin_0', 'Age_bin_1', 'Age_bin_2', 'Age_bin_3', 'Age_bin_4', 'Age_bin_5', 'Age_bin_6', 'Age_bin_7', 'Age_bin_8', 'Age_bin_9', 'SibSp_bin_0', 'SibSp_bin_1', 'SibSp_bin_2', 'SibSp_bin_3', 'SibSp_bin_4', 'SibSp_bin_6', 'SibSp_bin_9', 'Parch_bin_0', 'Parch_bin_1', 'Parch_bin_3', 'Parch_bin_4', 'Parch_bin_6', 'Parch_bin_8', 'Parch_bin_9', 'Fare_bin_0', 'Fare_bin_1', 'Fare_bin_2', 'Fare_bin_3', 'Fare_bin_4', 'Fare_bin_5', 'Fare_bin_9'],) 

  ('###################', {'uri': 'source/preprocessors.py::pd_colcat_bin', 'pars': {}, 'cols_family': 'colcat', 'type': ''}, '#######################################################') 

  ('D:\\_devs\\Python01\\gitdev\\dsa2',) 
             Pclass  ... Embarked
PassengerId          ...         
892               3  ...        Q
893               3  ...        S
894               2  ...        Q
895               3  ...        S
896               3  ...        S
...             ...  ...      ...
1305              3  ...        S
1306              1  ...        C
1307              3  ...        S
1308              3  ...        S
1309              3  ...        C

[418 rows x 9 columns] ['Sex', 'Embarked']

  ('#### Colcat to integer encoding ',) 
Sex Sex_int
Embarked Embarked_int

  (Sex         object
Embarked    object
dtype: object, {'cat_map': {'Sex': {'female': 0, 'male': 1}, 'Embarked': {'C': 0, 'Q': 1, 'S': 2}}, 'cat_map_inverse': {'Sex': {0: 'female', 1: 'male'}, 'Embarked': {0: 'C', 1: 'Q', 2: 'S'}}}) 

  ('###################', {'uri': 'source/preprocessors.py::pd_colcat_to_onehot', 'pars': {}, 'cols_family': 'colcat_bin', 'type': ''}, '#######################################################') 

  ('D:\\_devs\\Python01\\gitdev\\dsa2',) 
             Pclass  ... Embarked
PassengerId          ...         
892               3  ...        Q
893               3  ...        S
894               2  ...        Q
895               3  ...        S
896               3  ...        S
...             ...  ...      ...
1305              3  ...        S
1306              1  ...        C
1307              3  ...        S
1308              3  ...        S
1309              3  ...        C

[418 rows x 9 columns] ['Sex_int', 'Embarked_int']

  ('#### colcat to onehot',) 
Sex_int 2 (418, 2)
Embarked_int 3 (418, 2)

  (             Embarked_int_0  Embarked_int_1  Embarked_int_2
PassengerId                                                
892                       0               0               1
893                       1               0               0
894                       0               0               1
895                       1               0               0
896                       1               0               0,) 
ok ------------

  ('###################', {'uri': 'source/preprocessors.py::pd_colcross', 'pars': {}, 'cols_family': 'colcross', 'type': 'cross'}, '#######################################################') 

  ('D:\\_devs\\Python01\\gitdev\\dsa2',) 
             Pclass  ... Embarked
PassengerId          ...         
892               3  ...        Q
893               3  ...        S
894               2  ...        Q
895               3  ...        S
896               3  ...        S
...             ...  ...      ...
1305              3  ...        S
1306              1  ...        C
1307              3  ...        S
1308              3  ...        S
1309              3  ...        C

[418 rows x 9 columns] ['Name', 'Sex', 'Ticket', 'Embarked', 'Pclass', 'Age', 'SibSp', 'Parch', 'Fare']

  ('#####  Cross Features From OneHot Features   ######################################',) 

  (PassengerId                  892  893
Embarked_int_0-Pclass_bin_0    0    0
Embarked_int_0-Pclass_bin_4    0    0
Embarked_int_0-Pclass_bin_9    0    1
Embarked_int_0-Age_bin_0       0    0
Embarked_int_0-Age_bin_1       0    0
...                          ...  ...
Parch_bin_0-Fare_bin_0         1    1
Parch_bin_0-Fare_bin_1         0    0
Parch_bin_1-Fare_bin_0         0    0
Parch_bin_1-Fare_bin_1         0    0
Parch_bin_3-Fare_bin_0         0    0

[118 rows x 2 columns],) 

  ('######  Merge AlL int dfXy  #############################################################',) 

  <module 'models.model_sklearn' from 'D:\\_devs\\Python01\\gitdev\\dsa2\\source\\models\\model_sklearn.py'> D:/_devs/Python01/gitdev/dsa2/data/output/titanic/LGBMClassifier/ 

  #### Load model  ############################################ 

  #### modelx
 LGBMClassifier(early_stopping_rounds=5, learning_rate=0.001, n_estimators=3000,
               objective='binary') 

  ### Prediction  ############################################ 

  ############ Saving prediction (418,) D:/_devs/Python01/gitdev/dsa2/data/output/titanic/pred_titanic_lightgbm/ 

               Pclass  ... Survived_pred
PassengerId          ...              
892               3  ...           0.0
893               3  ...           0.0
894               2  ...           0.0
895               3  ...           0.0
896               3  ...           0.0
897               3  ...           0.0
898               3  ...           1.0
899               2  ...           0.0

[8 rows x 10 columns] 

  ###########  Export Specific 
